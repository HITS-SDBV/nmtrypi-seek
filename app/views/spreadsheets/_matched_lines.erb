<%
  #  workbook = Rails.cache.fetch(object.content_blob.cache_key) do
  #    object.spreadsheet
  #  end
  #
  #  xml = object.spreadsheet_xml
  #  doc = LibXML::XML::Parser.string(xml).parse
  #  doc.root.namespaces.default_prefix="ss"
  #
  #  #@origin_query = "Final Concentration,  LmPTR1 <=  30"
  # # @origin_query  ="Final Concentration, LmPTR1 [ÂµM]"
  #  @search_query = @search_query ? @search_query.gsub(/\s+/, " ").strip : ""
  #  operators = ["<", "<=", ">", ">=", "="]
  #  search_operator = operators.select { |o| @search_query.index(o) }.max_by(&:length)
  #  if search_operator
  #    search_arr = @search_query.split(search_operator)
  #    search_field_name = search_arr.first
  #    search_value = search_arr.last
  #    search_operator = "=" if search_field_name == search_value
  #
  #    head_cells = doc.find("//ss:sheet[@hidden='false' and @very_hidden='false']/ss:rows/ss:row/ss:cell").find_all { |cell| cell.content.gsub(/\s+/, " ").strip.match(/#{search_field_name}/i) }
  #    unless head_cells.blank?
  #      head_cell = head_cells[0]
  #      #head_sheet = head_cell.parent.parent.parent
  #      head_col = head_cell.attributes["column"]
  #      cells = doc.find("//ss:sheet[@hidden='false' and @very_hidden='false']/ss:rows/ss:row/ss:cell[@column=#{head_col}][text() #{search_operator} #{search_value}]").find_all
  #
  #    end
  #  else
  #    cells = doc.find("//ss:sheet[@hidden='false' and @very_hidden='false']/ss:rows/ss:row/ss:cell").find_all { |cell| cell.content.downcase.include?  @search_query.downcase }
  #  end
  #
  #  sheet_array = []
  #
  #  unless cells.blank?
  #    cell_groups = cells.group_by { |c| c.parent.try(:parent).try(:parent).try(:attributes).to_h["name"] }
  #    sheet_array = cell_groups.map do |sheet_name, match_cells|
  #
  #      sheet = workbook.sheets.detect { |sh| sheet_name.downcase == sh.name.downcase }
  #      rows_nums = match_cells.map { |c| c.attributes["row"].to_i }
  #      col_nums = match_cells.map { |c| c.attributes["column"].to_i }
  #      [sheet, rows_nums, col_nums]
  #    end
  #  end

%>

<% unless sheet_array.blank? %>
    <%= render :partial => "general/item_title", :locals => {:item => object} -%>
    <%= render :partial => "spreadsheets/spreadsheet_styles", :locals => {:styles => workbook.styles} if workbook %>
    <%= render :partial => "spreadsheets/row", :locals => {:sheet_array => sheet_array, :object_id => object.id}  %>

    <% else %>
    <%= render :partial => "assets/resource_list_item", :object => object -%>
<% end %>
