<div class="show_basic">
  <table id="compounds_attributes" class="display nowrap" cellspacing="0" width="100%">
    <thead>
      <tr>
        <th>
          normalizedID
        </th>
        <% @header.keys.each do |name| %>
        <th>
          <%= name %>
        </th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <% @compounds_hash.each do |id,datafile_attributes| %>
      <tr data-compoundid="<%= id %>">
        <td>
          <!-- normalized id value -->
          <%= id %>
        </td>
        <% @header.keys.each do |name| %>
        <td>
          <% datafile_attributes.each do |file_id,attributes| %>
            <% if attributes.has_key? name %>
                  <% @@compound_prefix = I18n.t('special.compound_id_prefix') %>
                  <% if (attributes[name] =~ /#{@@compound_prefix}[-_][a-zA-Z]+\d+/i) %>
                     <%= cell_link(attributes[name].to_s, file_id) %>
                      <%  %>
                  <% else %>
                      <%= attributes[name] %>
                  <% end %>
                  <% break %>
            <% end %>
          <% end %>
        </td>
        <% end %>
      </tr>
      <% end %>
    </tbody>
    <tfoot>
      <tr>
        <th>In Data file(s):</th>
        <% @header.each do |name,datafile_ids| %>
        <td>
          <ul>
            <% datafile_ids.each do |file_id| %>
              <%
                 data_file = DataFile.where(id: file_id).first
                 data_file_title = data_file.try(:title)
              %>
              <% if data_file.can_view?(User.current_user) %>
                <li class="list-title"> <%= link_to data_file_title, data_file %></li>
              <% end %>
            <% end %>
          </ul>
        </td>
        <% end %>
      </tr>
    </tfoot>
  </table>
</div>
<ul id="cell_menu" class='dynamic_menu with_smaller_shadow' style="display:none;margin-top: 0.5em; width:auto;">

<div class="warning">
  Please note: If an attribute is found in multiple data_files, only the value from the first is shown in this table. </div>
<script type="text/javascript">

jQuery(document).ready(function(){
	// the current version of datatables.net-buttons collection still uses the deprecated 'addSelf' instead of 'addBack'
	// https://github.com/jquery/jquery-migrate/blob/dc1d703f7747d71f471316bc66a2ea32b6197046/src/traversing.js
	// this is already fixed in the master branch, but has not been in the release yet
	var oldSelf = jQuery.fn.andSelf || jQuery.fn.addBack;
	jQuery.fn.andSelf = function() {
		console.log( "jQuery.fn.andSelf() is deprecated and removed. Remove this code once datatables.net-buttons is updated to 1.2.2 or higher" );
		return oldSelf.apply( this, arguments );
	};

  var table = jQuery('#compounds_attributes').DataTable({
    // responsive: true,
    "scrollX": true,
    "lengthMenu": [[10,25, 50,-1],[10,25,50,"All"]],
    buttons: [
      {
        extend: 'collection',
        text: 'Export',
        autoClose: true,
        buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
      },
      {
        extend: 'colvis',
        columns: ':not(:nth-child(2))', //(:first-child)
        collectionLayout: 'fixed three-column',

        //added a button to show none of the columns except the default first.
        postfixButtons: [ {extend: 'colvisGroup',
                           text: 'Show none',
                           show: ':hidden',
                           hide: ':not(:nth-child(2))'},
                        'colvisRestore']
      },

      {
        text: "Filter selected",
        action: function(){
          ids = jQuery( table.rows('.selected').nodes()).map(
                  function(){ return jQuery(this).data('compoundid');}
                ).get();
          if( ids.length > 0) {
            window.location.href = "<%= compounds_attributes_table_path %>?" + jQuery.param({ "ids":ids});
          } 
        }
      }
    ],
    order: [[ 0, 'asc' ]],
    asStripeClasses: []
  });
  jQuery('#compounds_attributes tbody').on( 'click', 'tr', function () {
    jQuery(this).toggleClass('selected');
  });
  jQuery("div")
      .mousedown(function (evt) {
        if( jQuery('#cell_menu').css("display") === "block"){
          jQuery('#cell_menu').hide();
        }
      }
  );
  jQuery("td a.context_menu_link")
      .on("context_menu", function(evt, menu_content){
        //why we need this offset here and not in the parallel function in spreadsheet_explorer.js.erb. perhaps too many "parents" here for "relative" to work.
        // var offset =  jQuery('td a.context_menu_link').parent().parent().parent().parent().parent().parent().outerHeight(true);
        var offset = jQuery('td a.context_menu_link').parent().parent().parent().parent().parent().parent()[0].offsetTop +
                      jQuery('td a.context_menu_link').parent().parent()[0].clientHeight/2; //add row_height/2
        //console.log(offset);
        jQuery('#cell_menu').css('top',  offset + jQuery(this).position().top + jQuery(this).height() );
        jQuery('#cell_menu').css('left',jQuery(this).position().left+10);
        jQuery('#cell_menu').html(menu_content);
        if( jQuery('#cell_menu').css("display") === "none"){
          jQuery('#cell_menu').show();
        }
      })
  ;
  table.buttons().container().insertBefore( '#compounds_attributes_filter' );
});
</script>